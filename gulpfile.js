"use strict";const gulp = require('gulp');const l = require('gulp-load-plugins')();const sprite = require('gulp.spritesmith');const sprite_svg = require('gulp-svg-sprite');function lazyIntegration(task, path, options){  "use strict";  options.task = task;  gulp.task(task, function(callback){    var taskType = require(path).call(this, options);    return taskType(callback);  });}lazyIntegration('styles', './gulpTasks/styles.js', {  src: 'src/sass/screen.sass'});lazyIntegration('copy', './gulpTasks/copy.js', {  src: ['src/**/*.*', '!src/sass/**'],  dest: 'build'});lazyIntegration('server', './gulpTasks/server.js', {});lazyIntegration('rev', './gulpTasks/rev.js', {});gulp.task('sprite:png', function (callback) {  var spriteData = gulp.src('src/img/icons-png/*.png')    .pipe(sprite({      imgName: 'png-sprite.png',      cssName: '_png-sprite.sass',      cssFormat: 'sass',      imgPath: '../img/png-sprite.png',      algorithm: 'top-down',    }));  spriteData.img.pipe(gulp.dest('build/img/'));  l.debug({title: 'sprite-images:create'});  spriteData.css.pipe(gulp.dest('src/sass/helpers/'));  l.debug({title: 'sprite-sass:create'});  callback();});gulp.task('sprite:svg', function () {  return gulp.src('src/img/icons-svg/*.svg')    .pipe(sprite_svg({      mode: {        spacing: {          padding: 10        },        css: {          dest: '.',          bust: false,          sprite: 'svg-sprite.svg',          layout: 'vertical',          prefix: '$',          dimensions: true,          render: {              scss: {                dest: '_svg-sprite.scss'              }          }        }      }    }))    .pipe(l.debug({title: 'svg-sprite-img:created'}))    .pipe(l.if('*.scss', gulp.dest('src/sass/helpers/')))    .pipe(l.if('*.svg', gulp.dest('build/img/')))});gulp.task('build', gulp.series('styles', 'copy'));gulp.task('watch', function(){  gulp.watch('src/sass/**/*.*', gulp.series('styles'));  gulp.watch('src/**/*.*', gulp.series('copy'));  gulp.watch('src/img/**/*.{svg,png,jpg}', gulp.series('sprite:png'));});gulp.task('dev', gulp.series('build', gulp.parallel('watch', 'server')));