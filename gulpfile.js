"use strict";const gulp = require('gulp');const l = require('gulp-load-plugins')();const sprite = require('gulp.spritesmith');const svg_sprite = require('gulp-svg-sprites');function lazyIntegration(task, path, options){  "use strict";  options.task = task;  gulp.task(task, function(callback){    var taskType = require(path).call(this, options);    return taskType(callback);  });}lazyIntegration('styles', './gulpTasks/styles.js', {  src: 'src/sass/screen.sass'});lazyIntegration('copy', './gulpTasks/copy.js', {  src: ['src/**/*.*', '!src/sass/**'],  dest: 'build',});lazyIntegration('server', './gulpTasks/server.js', {});lazyIntegration('rev', './gulpTasks/rev.js', {});lazyIntegration('svg:min', './gulpTasks/svgmin.js', {});lazyIntegration('svg:attr', './gulpTasks/svg-remove-attributes.js', {});lazyIntegration('svg:replace', './gulpTasks/svg-bug-fixes.js', {});lazyIntegration('html:svg', './gulpTasks/html-build.js', {});lazyIntegration('js:build', './gulpTasks/js-build.js', {});gulp.task('compile', function () {  'use strict';  var twig = require('gulp-twig');  return gulp.src('src/pages/*.twig')    .pipe(twig())    .pipe(gulp.dest('build/'));});gulp.task('sprite:png', function (callback) {  var spriteData = gulp.src(['src/img/icons-png/*.png'])    .pipe(sprite({      // retinaSrcFilter: ['src/img/icons-png2x/*@2x.png'],      // retinaImgName: 'png-sprite2x.png',      // imgName: 'png-sprite.png',      // cssName: '_png-sprite.scss',      // cssFormat: 'scss',      imgPath: '../img/sprite.png',      algorithm: 'top-down',      retinaSrcFilter: ['src/img/icons-png/*@2x.png'],      imgName: 'sprite.png',      retinaImgName: '../img/sprite@2x.png',      cssName: 'png-sprite.sass'    }));  spriteData.img.pipe(gulp.dest('build/img/'));  l.debug({title: 'sprite-images:create'});  spriteData.css.pipe(gulp.dest('src/sass/helpers/'));  l.debug({title: 'sprite-sass:create'});  callback();});gulp.task('sprite:png2x', function (callback) {  var spriteData = gulp.src('src/img/icons-png2x/*@2x.png')    .pipe(sprite({      retinaSrcFilter: ['src/img/icons-png2x/*@2x.png'],      retinaImgName: 'png-sprite2x.png',      imgName: 'png-sprite2x.png',      cssName: '_png-sprite2x.sass',      cssFormat: 'sass',      imgPath: '../img/png-sprite@2x.png',      algorithm: 'top-down',    }));  spriteData.img.pipe(gulp.dest('build/img/'));  l.debug({title: 'sprite-images:create'});  spriteData.css.pipe(gulp.dest('src/sass/helpers/'));  l.debug({title: 'sprite-sass:create'});  callback();});gulp.task('sprite:svg', function () {  return gulp.src('build/img/icons-svg/*.svg')    .pipe(svg_sprite({      preview: false,      mode: 'symbols',      selector: "icon-%f",      svg: {        symbols: 'svg_sprite.html'      }    }))    .pipe(l.if('*.html', gulp.dest('build/img/')))    .pipe(l.if('*.svg', gulp.dest('build/img/')))    .pipe(l.debug({title: 'svg-sprite-img:created'}))});gulp.task('svg:scss', function () {  return gulp.src('src/img/icons-svg/*.svg')    .pipe(svg_sprite({        preview: false,        selector: "icon-%f",        cssFile: '_svg-sprite.scss',        templates: {          css: require("fs").readFileSync('src/sass/helpers/_svg-sprite-template.scss', "utf-8")        }      }    ))    .pipe(l.if('*.scss', gulp.dest('src/sass/helpers/')));});gulp.task('svg:sprites', gulp.series(['copy', 'svg:min', 'svg:attr', 'svg:replace', 'sprite:svg', 'svg:scss']));gulp.task('build', gulp.series('sprite:png','svg:sprites', 'styles', 'copy'));gulp.task('watch', function(){  gulp.watch('src/sass/**/*.*', gulp.series('styles'));  gulp.watch('src/js/**/*.*', gulp.series('js:build'));  gulp.watch(['src/**/*.*', '!src/bower_components/', '!src/js/**/*.js'], gulp.series('copy'));  gulp.watch('src/img/icons-png/*.png', gulp.series('sprite:png'));  gulp.watch('src/img/icons-svg/*.svg', gulp.series('svg:sprites'));});gulp.task('dev', gulp.series('build', gulp.parallel('watch', 'server')));